@font-face {
    font-family: 'syn_novaregular';
    src: url('./fonts/synnova-regular-webfont.woff2') format('woff2'),
         url('./fonts/synnova-regular-webfont.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}

/* ---- Reset / Normalizing */
*,
*::before,
*::after {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

:root {
    font-size: max(16px, 1rem);
    line-height: 1.6;
    color: white;

    --transparent-drk-blue: rgba(40, 0, 237, 0.35);

    --static-yellow: rgb(224, 231, 24);
    --hover-yellow: rgb(247, 255, 10);

    --selected-green: rgb(17, 255, 0);
    --transprent-green: rgba(30, 255, 0, 0.5);

    --o-symbol: url(./svgs/o_symbol.svg);
    --x-symbol: url(./svgs/x_symbol.svg);

    font-family: 'syn_novaregular', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', sans-serif;
}

button {
    color: black;
    background-color: var(--static-yellow);

    padding: 0.4rem 1rem;

    width: 250px;

    font-size: 1.2rem;

    border-radius: 10px;
    border: 4px solid black;

    transition: 0.5s;
    font: inherit;
}

button:hover {
    background-color: var(--hover-yellow);
    border-color: rgb(92, 93, 93);
}

button:active {
    background-color: var(--selected-green);
    transition: 0.2s;
}

input[type=radio] {
    display: none;
    -webkit-appearance: none;
    appearance: none;
}

input[type=radio]:disabled {
    pointer-events: none;
    -webkit-appearance: none;
    appearance: none;
}

html, body {
    background-color: rgb(28, 28, 28);
    height: 100%;
}
/* ---- End of reset/ normalizing */

/* ---- Background SVG placement ---- */
body {
    background-image: url(./svgs/animated.svg);
    background-attachment: fixed;
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;

    min-height: 100vh;
}
/* ---- End of background styling ---- */

/* ---- Positioning styles ---- */
body {
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    align-items: center;

    gap: 1rem;
}

section:has(form), form {
    display: flex;
    flex-flow: column nowrap;

    align-items: center;
    gap: 1rem;
}

.gamegrid {
    border: 1px solid red;

    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    padding: 0.6rem;

    width: clamp(300px, 75%, 750px);
    aspect-ratio: 1;
}
/* ---- End of positioning styling ---- */

/* ---- Form styling ---- */
form {
    border: 4px solid red;
    border-radius: 10px;

    padding: .6rem;

    text-align: center;
    font-size: 1.5rem;
}

fieldset {
    padding: 0.5rem;
    border: none;
    border-bottom: 1px solid gray;

    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    row-gap: 0.8rem;

    width: 100%;
    padding-bottom: 1rem;
}

p:has(label) {
    border-radius: 10px;

    background-color:var(--transparent-drk-blue);

    padding: 0.2rem;

    transition: 0.5s;
    box-shadow: 1px 1px rgb(242, 0, 255);

    display: flex;
    flex-flow: row nowrap;

    justify-content: center;

    @media(hover: hover) {
        &:has(label):hover {
            background-color: rgb(40, 0, 237);
        }
    }
}

p:has(input:checked) {
    border: 2px solid var(--selected-green);
    box-shadow: 2px 2px var(--selected-green);
    background-color: var(--transprent-green);
}

label {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* ---- End of form styling ---- */

/* ---- Game Over container styling ---- */
.game-over-container, .game-over-container section {
    display: flex;
    flex-flow: column nowrap;
    align-content: center;
    justify-items: center;
}

.game-over-container > :first-child {
    width: 100%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

/* Custom animation ruleset for the element */
@keyframes scaleIn {
    from {transform: scale(0);}
    to {transform: scale(1);}
}

/* Select the span element within the h1 element */
.game-over-container > :first-child :first-child {
    height: 1.5em;
    animation: scaleIn 0.5s ease-out;
}
/* ---- End of Game Over container styling ---- */

/* ---- Current Player Container Styling ---- */
.current-player-display {
    font-size: 2rem;

    > :first-child {
        display: flex;
    }

    > :first-child :first-child {
        height: 1.5em;
    }
}
/* ---- End of Current Player Container Styling ---- */

/* ---- gamegrid Visual styling ---- */
.gamegrid div {
    border: 2px solid white;
    background-color: rgba(39, 38, 39, 0.5);

    display: flex;
    justify-content: center;
    > img {
        width: 85%;
        aspect-ratio: 1;
    }
}

@keyframes shrinkGrowBounce {
  from {
    transform: scale(1);
  }

  to {
    transform: scale(0.9);
  }
}

.gamegrid div:active {
    animation-duration: 0.8s;
    animation-name: shrinkGrowBounce;
    background-color: rgba(180, 180, 180, 0.345);
    transition: 0.2s;
}

@media(hover: hover) {
    .gamegrid div:hover {
        animation-duration: 0.8s;
        animation-name: shrinkGrowBounce;
        animation-iteration-count: infinite;
        animation-direction:alternate;
        animation-timing-function: ease-in-out;

        background-color: rgba(180, 180, 180, 0.345);
        transition: 0.8s;
    }
}
/* ---- end of gamegrid styling ---- */

/* ---- Default container display states ---- */
/* These containers are hidden until certain states are met, they are controlled
via javascript. */
.game-over-container, .current-player-display, .gamegrid {
    display: none;
}